They
may
still
be
faster
on
reasonable
sizes
of
things
And
so
we
have
to
both
balance
our
mathematical
understanding
with
our
engineering
common
sense
in
order
to
do
good
programming
So
just
having
done
analysis
of
algorithms
doesn't
automatically
make
you
a
good
programmer
You
also
need
to
learn
how
to
program
and
use
these
tools
in
practice
to
understand
when
they
are
relevant
and
when
they
are
not
relevant
There
is
a
saying
If
you
want
to
be
a
good
program
you
just
program
ever
day
for
two
years
you
will
be
an
excellent
programmer
If
you
want
to
be
a
world
class
programmer
you
can
program
every
day
for
ten
years
or
you
can
program
every
day
for
two
years
and
take
an
algorithms
class
Let's
get
back
to
what
we
were
doing
which
is
analyzing
insertion
sort
We
are
going
to
look
at
the
worse
case
Which
as
we
mentioned
before
is
when
the
input
is
reverse
sorted
The
biggest
element
comes
first
and
the
smallest
last
because
now
every
time
you
do
the
insertion
you
've
got
to
They
may
still
be
faster
on
reasonable
sizes
of
things
And
so
we
have
to
both
balance
our
mathematical
understanding
with
our
engineering
common
sense
in
order
to
do
good
programming
So
just
having
done
analysis
of
algorithms
doesn't
automatically
make
you
a
good
programmer
You
also
need
to
learn
how
to
program
and
use
these
tools
in
practice
to
understand
when
they
are
relevant
and
when
they
are
not
relevant
There
is
a
saying
If
you
want
to
be
a
good
program
you
just
program
ever
day
for
two
years
you
will
be
an
excellent
programmer
If
you
want
to
be
a
world
class
programmer
you
can
program
every
day
for
ten
years
or
you
can
program
every
day
for
two
years
and
take
an
algorithms
class
Let's
get
back
to
what
we
were
doing
which
is
analyzing
insertion
sort
We
are
going
to
look
at
the
worse
case
Which
as
we
mentioned
before
is
when
the
input
is
reverse
sorted
The
biggest
element
comes
first
and
the
smallest
last
because
now
every
time
you
do
the
insertion
you
've
got
to
They
may
still
be
faster
on
reasonable
sizes
of
things
And
so
we
have
to
both
balance
our
mathematical
understanding
with
our
engineering
common
sense
in
order
to
do
good
programming
So
just
having
done
analysis
of
algorithms
doesn't
automatically
make
you
a
good
programmer
You
also
need
to
learn
how
to
program
and
use
these
tools
in
practice
to
understand
when
they
are
relevant
and
when
they
are
not
relevant
There
is
a
saying
If
you
want
to
be
a
good
program
you
just
program
ever
day
for
two
years
you
will
be
an
excellent
programmer
If
you
want
to
be
a
world
class
programmer
you
can
program
every
day
for
ten
years
or
you
can
program
every
day
for
two
years
and
take
an
algorithms
class
Let's
get
back
to
what
we
were
doing
which
is
analyzing
insertion
sort
We
are
going
to
look
at
the
worse
case
Which
as
we
mentioned
before
is
when
the
input
is
reverse
sorted
The
biggest
element
comes
first
and
the
smallest
last
because
now
every
time
you
do
the
insertion
you
've
got
to
They
may
still
be
faster
on
reasonable
sizes
of
things
And
so
we
have
to
both
balance
our
mathematical
understanding
with
our
engineering
common
sense
in
order
to
do
good
programming
So
just
having
done
analysis
of
algorithms
doesn't
automatically
make
you
a
good
programmer
You
also
need
to
learn
how
to
program
and
use
these
tools
in
practice
to
understand
when
they
are
relevant
and
when
they
are
not
relevant
There
is
a
saying
If
you
want
to
be
a
good
program
you
just
program
ever
day
for
two
years
you
will
be
an
excellent
programmer
If
you
want
to
be
a
world
class
programmer
you
can
program
every
day
for
ten
years
or
you
can
program
every
day
for
two
years
and
take
an
algorithms
class
Let's
get
back
to
what
we
were
doing
which
is
analyzing
insertion
sort
We
are
going
to
look
at
the
worse
case
Which
as
we
mentioned
before
is
when
the
input
is
reverse
sorted
The
biggest
element
comes
first
and
the
smallest
last
because
now
every
time
you
do
the
insertion
you
've
got
to
They
may
still
be
faster
on
reasonable
sizes
of
things
And
so
we
have
to
both
balance
our
mathematical
understanding
with
our
engineering
common
sense
in
order
to
do
good
programming
So
just
having
done
analysis
of
algorithms
doesn't
automatically
make
you
a
good
programmer
You
also
need
to
learn
how
to
program
and
use
these
tools
in
practice
to
understand
when
they
are
relevant
and
when
they
are
not
relevant
There
is
a
saying
If
you
want
to
be
a
good
program
you
just
program
ever
day
for
two
years
you
will
be
an
excellent
programmer
If
you
want
to
be
a
world
class
programmer
you
can
program
every
day
for
ten
years
or
you
can
program
every
day
for
two
years
and
take
an
algorithms
class
Let's
get
back
to
what
we
were
doing
which
is
analyzing
insertion
sort
We
are
going
to
look
at
the
worse
case
Which
as
we
mentioned
before
is
when
the
input
is
reverse
sorted
The
biggest
element
comes
first
and
the
smallest
last
because
now
every
time
you
do
the
insertion
you
've
got
to
They
may
still
be
faster
on
reasonable
sizes
of
things
And
so
we
have
to
both
balance
our
mathematical
understanding
with
our
engineering
common
sense
in
order
to
do
good
programming
So
just
having
done
analysis
of
algorithms
doesn't
automatically
make
you
a
good
programmer
You
also
need
to
learn
how
to
program
and
use
these
tools
in
practice
to
understand
when
they
are
relevant
and
when
they
are
not
relevant
There
is
a
saying
If
you
want
to
be
a
good
program
you
just
program
ever
day
for
two
years
you
will
be
an
excellent
programmer
If
you
want
to
be
a
world
class
programmer
you
can
program
every
day
for
ten
years
or
you
can
program
every
day
for
two
years
and
take
an
algorithms
class
Let's
get
back
to
what
we
were
doing
which
is
analyzing
insertion
sort
We
are
going
to
look
at
the
worse
case
Which
as
we
mentioned
before
is
when
the
input
is
reverse
sorted
The
biggest
element
comes
first
and
the
smallest
last
because
now
every
time
you
do
the
insertion
you
've
got
to
